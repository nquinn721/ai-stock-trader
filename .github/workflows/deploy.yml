name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
  REGION: us-central1
  SERVICE_NAME: ai-stock-trader

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json

    - name: Install backend dependencies
      run: |
        cd backend
        npm ci

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Run backend tests
      run: |
        cd backend
        npm run test

    - name: Run frontend tests
      run: |
        cd frontend
        npm run test -- --coverage --watchAll=false

    - name: Run backend linting
      run: |
        cd backend
        npm run lint

    - name: Build frontend
      run: |
        cd frontend
        npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GOOGLE_CLOUD_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker to use gcloud as a credential helper
      run: |
        gcloud auth configure-docker

    - name: Build Docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA .
        docker tag gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA gcr.io/$PROJECT_ID/$SERVICE_NAME:latest

    - name: Push Docker image
      run: |
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --port 8080 \
          --memory 2Gi \
          --cpu 2 \
          --min-instances 0 \
          --max-instances 10 \
          --concurrency 80 \
          --timeout 300 \
          --set-env-vars "NODE_ENV=production" \
          --set-env-vars "PORT=8080" \
          --set-env-vars "DB_HOST=/cloudsql/${{ secrets.DB_CONNECTION_NAME }}" \
          --set-env-vars "DB_PORT=3306" \
          --set-env-vars "DB_NAME=${{ secrets.DB_NAME }}" \
          --set-env-vars "DB_USERNAME=${{ secrets.DB_USERNAME }}" \
          --set-secrets "DB_PASSWORD=db-password:latest" \
          --add-cloudsql-instances ${{ secrets.DB_CONNECTION_NAME }}

    - name: Get service URL
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format="value(status.url)")
        echo "Service deployed at: $SERVICE_URL"
        echo "API Documentation: $SERVICE_URL/api"