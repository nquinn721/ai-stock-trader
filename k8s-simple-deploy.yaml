# Simplified deployment without problematic dependencies
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stock-trading-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stock-trading-app
  template:
    metadata:
      labels:
        app: stock-trading-app
    spec:
      containers:
        - name: backend
          image: node:20-alpine
          ports:
            - containerPort: 8080
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "8080"
          workingDir: /app
          command: ["sh", "-c"]
          args:
            - |
              npm install express cors
              cat > server.js << 'EOF'
              const express = require('express');
              const cors = require('cors');
              const app = express();
              const port = process.env.PORT || 8080;

              app.use(cors());
              app.use(express.json());

              app.get('/health', (req, res) => {
                res.json({ status: 'OK', timestamp: new Date().toISOString() });
              });

              app.get('/api/stocks', (req, res) => {
                res.json([
                  { symbol: 'AAPL', currentPrice: 175.25, change: 2.15 },
                  { symbol: 'GOOGL', currentPrice: 2845.32, change: -15.42 },
                  { symbol: 'MSFT', currentPrice: 378.85, change: 5.21 }
                ]);
              });

              app.listen(port, '0.0.0.0', () => {
                console.log(`Stock Trading API running on port ${port}`);
              });
              EOF
              node server.js
---
apiVersion: v1
kind: Service
metadata:
  name: stock-trading-service
spec:
  selector:
    app: stock-trading-app
  ports:
    - port: 80
      targetPort: 8080
  type: LoadBalancer
