version: "3.8"

services:
  # Production Backend
  backend-prod:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    ports:
      - "8080:8000" # Different port to avoid dev conflicts
    environment:
      - NODE_ENV=production
      - PORT=8000
      - DATABASE_URL=${PROD_DATABASE_URL}
      - YAHOO_FINANCE_API_KEY=${YAHOO_FINANCE_API_KEY}
      - NEWS_API_KEY=${NEWS_API_KEY}
    volumes:
      - prod_data:/app/data
    networks:
      - prod_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Production Frontend
  frontend-prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - REACT_APP_API_URL=http://localhost:8080
    ports:
      - "3080:80" # Different port to avoid dev conflicts
    depends_on:
      - backend-prod
    networks:
      - prod_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Production Database (MySQL)
  database-prod:
    image: mysql:8.0
    ports:
      - "3307:3306" # Different port
    environment:
      - MYSQL_ROOT_PASSWORD=${PROD_DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=trading_app_prod
      - MYSQL_USER=${PROD_DB_USER}
      - MYSQL_PASSWORD=${PROD_DB_PASSWORD}
    volumes:
      - prod_db_data:/var/lib/mysql
    networks:
      - prod_network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

volumes:
  prod_data:
  prod_db_data:

networks:
  prod_network:
    driver: bridge
