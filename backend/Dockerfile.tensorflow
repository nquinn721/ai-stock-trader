# Option 3: Specialized AI/ML image - TensorFlow.js optimized
FROM tensorflow/tensorflow:latest-gpu AS ml-base

# Install Node.js 20
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs

FROM node:20-bullseye AS builder

# Install AI/ML dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    build-essential \
    pkg-config \
    libcairo2-dev \
    libpango1.0-dev \
    libjpeg-dev \
    libgif-dev \
    librsvg2-dev \
    libpixman-1-dev \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set up Python
RUN ln -sf /usr/bin/python3 /usr/bin/python

# Optimized environment for TensorFlow.js
ENV PYTHON=/usr/bin/python3
ENV TFJS_BACKEND=cpu
ENV TFJS_DISABLE_WEBGL=true
ENV npm_config_build_from_source=false
ENV NODE_OPTIONS="--max-old-space-size=6144"
ENV TF_CPP_MIN_LOG_LEVEL=2

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig*.json ./
COPY nest-cli.json ./

# Install with TensorFlow optimizations
RUN npm ci --omit=dev --ignore-scripts
RUN npm cache clean --force

# Copy source and build
COPY src/ ./src/
RUN npm run build

# Production stage
FROM node:20-bullseye-slim AS production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libcairo2 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libjpeg62-turbo \
    libgif7 \
    librsvg2-2 \
    libpixman-1-0 \
    curl \
    dumb-init \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Create non-root user
RUN groupadd -g 1001 nodejs && \
    useradd -r -u 1001 -g nodejs nestjs

# Copy from builder
COPY --from=builder --chown=nestjs:nodejs /app/dist ./dist
COPY --from=builder --chown=nestjs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nestjs:nodejs /app/package*.json ./

# Optimized environment
ENV NODE_ENV=production
ENV PORT=8000
ENV TFJS_BACKEND=cpu
ENV TFJS_DISABLE_WEBGL=true
ENV NODE_OPTIONS="--max-old-space-size=3072"
ENV TF_CPP_MIN_LOG_LEVEL=2

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:8000/health || exit 1

USER nestjs
EXPOSE 8000

ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/main.js"]
