// Stories data - Small, focused stories without progress tracking
import { Story } from "./types";

export const stories: Story[] = [
  {
    id: "S1",
    title: "Add stock price formatting helper",
    description:
      "Create a utility function to format stock prices with proper currency symbols and decimal places.",
    status: "DONE",
    priority: "Low",
    epic: "E1",
    storyPoints: 1,
    sprint: 1,
    assignee: "Alice",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-01",
    completedDate: "2025-06-02",
  },
  {
    id: "S2",
    title: "Fix WebSocket connection timeout",
    description:
      "Add timeout handling for WebSocket connections to prevent hanging connections.",
    status: "DONE",
    priority: "Medium",
    epic: "E1",
    storyPoints: 2,
    sprint: 1,
    assignee: "Bob",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-02",
    completedDate: "2025-06-03",
  },
  {
    id: "S3",
    title: "Add loading spinner to stock cards",
    description: "Display a loading spinner while stock data is being fetched.",
    status: "DONE",
    priority: "Low",
    epic: "E1",
    storyPoints: 1,
    sprint: 1,
    assignee: "Carol",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-03",
    completedDate: "2025-06-04",
  },
  {
    id: "S4",
    title: "Validate stock symbol input",
    description:
      "Add client-side validation for stock symbol input fields (uppercase, length limits).",
    status: "DONE",
    priority: "Medium",
    epic: "E1",
    storyPoints: 2,
    sprint: 1,
    assignee: "Dave",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-04",
    completedDate: "2025-06-05",
  },
  {
    id: "S5",
    title: "Add error boundary to dashboard",
    description:
      "Implement React error boundary to catch and display component errors gracefully.",
    status: "DONE",
    priority: "Medium",
    epic: "E1",
    storyPoints: 2,
    sprint: 2,
    assignee: "Eve",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-05",
    completedDate: "2025-06-06",
  },
  {
    id: "S6",
    title: "Create empty state component",
    description:
      "Build a reusable component to display when no data is available (no stocks, no portfolio, etc).",
    status: "DONE",
    priority: "Low",
    epic: "E1",
    storyPoints: 1,
    sprint: 2,
    assignee: "Frank",
    progress: 100,
    dependencies: [],
    createdDate: "2025-06-06",
    completedDate: "2025-06-21",
  },
  {
    id: "S7",
    title: "Add stock symbol search autocomplete",
    description:
      "Implement autocomplete dropdown for stock symbol input using predefined stock list.",
    status: "DONE",
    priority: "Medium",
    epic: "E2",
    storyPoints: 3,
    sprint: 2,
    assignee: "Grace",
    progress: 100,
    dependencies: ["S4"],
    createdDate: "2025-06-07",
    completedDate: "2025-06-21",
  },
  {
    id: "S8",
    title: "Fix portfolio percentage calculations",
    description:
      "Correct the percentage calculation logic for portfolio gains/losses display.",
    status: "DONE",
    priority: "High",
    epic: "E2",
    storyPoints: 2,
    sprint: 3,
    assignee: "Henry",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-08",
    completedDate: "2025-06-21",
  },  {
    id: "S9",
    title: "Create API health check endpoint",
    description:
      "Add a simple /health endpoint to monitor API availability and response time.",
    status: "DONE",
    priority: "Medium",
    epic: "E3",
    storyPoints: 1,
    assignee: "Jack",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-10",
    completedDate: "2025-06-21",
  },
  // CLIENT TESTING STORIES
  {
    id: "S10",
    title: "Write unit tests for React components",
    description:
      "Create comprehensive unit tests for all React components using Jest and React Testing Library. Target 90%+ coverage for Dashboard, QuickTrade, PortfolioChart, and StockCard components.",
    status: "TODO",
    priority: "High",
    epic: "E2",
    storyPoints: 5,
    assignee: "Alice",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-21",
  },
  {
    id: "S11",
    title: "Write integration tests for API calls",
    description:
      "Create integration tests for all frontend API calls including stock data fetching, portfolio operations, and WebSocket connections. Mock external dependencies properly.",
    status: "TODO",
    priority: "High",
    epic: "E2",
    storyPoints: 3,
    assignee: "Bob",
    progress: 0,
    dependencies: ["S10"],
    createdDate: "2025-06-21",
  },
  {
    id: "S12",
    title: "Implement Playwright E2E tests",
    description:
      "Create end-to-end tests using Playwright covering user workflows: login, stock browsing, trading, portfolio viewing, and performance charts.",
    status: "TODO",
    priority: "High",
    epic: "E2",
    storyPoints: 5,
    assignee: "Carol",
    progress: 0,
    dependencies: ["S10"],
    createdDate: "2025-06-21",
  },
  // FONTAWESOME INTEGRATION
  {
    id: "S13",
    title: "Add FontAwesome to client application",
    description:
      "Install and configure FontAwesome icons library. Replace existing icons with FontAwesome icons for trading, portfolio, charts, and navigation elements.",
    status: "TODO",
    priority: "Medium",
    epic: "E3",
    storyPoints: 2,
    assignee: "Dave",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-21",
  },
  // DAY TRADING ANALYSIS STORIES
  {
    id: "S14",
    title: "Implement Technical Analysis Indicators",
    description:
      "Add RSI, MACD, Bollinger Bands, and Moving Averages calculations to backend. These are key indicators day traders use for entry/exit decisions.",
    status: "TODO",
    priority: "High",
    epic: "E4",
    storyPoints: 5,
    assignee: "Eve",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-21",
  },
  {
    id: "S15",
    title: "Add Volume Analysis System",
    description:
      "Implement volume spike detection, volume-weighted average price (VWAP), and volume trend analysis. High volume confirms price movements for day traders.",
    status: "TODO",
    priority: "High",
    epic: "E4",
    storyPoints: 3,
    assignee: "Frank",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-21",
  },
  {
    id: "S16",
    title: "Implement Support/Resistance Level Detection",
    description:
      "Create algorithm to identify key support and resistance levels using historical price data. Day traders use these for entry/exit points and stop-loss placement.",
    status: "TODO",
    priority: "High",
    epic: "E4",
    storyPoints: 4,
    assignee: "Grace",
    progress: 0,
    dependencies: ["S14"],
    createdDate: "2025-06-21",
  },
  {
    id: "S17",
    title: "Add Momentum and Volatility Indicators",
    description:
      "Implement momentum oscillators (Stochastic, Williams %R) and volatility measures (ATR, volatility percentage). Critical for day trading timing decisions.",
    status: "TODO",
    priority: "High",
    epic: "E4",
    storyPoints: 3,
    assignee: "Henry",
    progress: 0,
    dependencies: ["S14"],
    createdDate: "2025-06-21",
  },
  {
    id: "S18",
    title: "Create Pattern Recognition System",
    description:
      "Implement candlestick pattern recognition (Doji, Hammer, Engulfing) and chart patterns (Head & Shoulders, Triangles, Flags) using AI/ML models for automated detection.",
    status: "TODO",
    priority: "High",
    epic: "E4",
    storyPoints: 8,
    assignee: "Ivy",
    progress: 0,
    dependencies: ["S14", "S16"],
    createdDate: "2025-06-21",
  },
  // LIVE RECOMMENDATIONS SYSTEM
  {
    id: "S19",
    title: "Build AI-Powered Trading Recommendations Engine",
    description:
      "Create ML-based system combining technical indicators, news sentiment, analyst ratings, and pattern recognition to generate real-time buy/sell recommendations with confidence scores.",
    status: "TODO",
    priority: "Critical",
    epic: "E5",
    storyPoints: 8,
    assignee: "Jack",
    progress: 0,
    dependencies: ["S14", "S15", "S16", "S17", "S18"],
    createdDate: "2025-06-21",
  },
  {
    id: "S20",
    title: "Implement Real-Time Notification System",
    description:
      "Create live notification system in client that alerts users to buy/sell opportunities, stop-loss triggers, and market events based on AI recommendations.",
    status: "TODO",
    priority: "Critical",
    epic: "E5",
    storyPoints: 5,
    assignee: "Alice",
    progress: 0,
    dependencies: ["S19"],
    createdDate: "2025-06-21",
  },
  {
    id: "S21",
    title: "Add Risk Management Integration",
    description:
      "Integrate position sizing, risk/reward ratios, and portfolio risk assessment into recommendation system. Include stop-loss and take-profit suggestions.",
    status: "TODO",
    priority: "High",
    epic: "E5",
    storyPoints: 4,
    assignee: "Bob",
    progress: 0,
    dependencies: ["S19"],
    createdDate: "2025-06-21",
  },
  // PORTFOLIO LIVE DATA VERIFICATION
  {
    id: "S22",
    title: "Audit Portfolio Data Sources",
    description:
      "Verify all portfolio data comes from live API endpoints. Remove any mock data from backend portfolio services and ensure real-time data flow.",
    status: "TODO",
    priority: "Critical",
    epic: "E1",
    storyPoints: 3,
    assignee: "Carol",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-21",
  },
  {
    id: "S23",
    title: "Implement Live Portfolio Performance Tracking",
    description:
      "Ensure portfolio performance metrics (P&L, returns, positions) update in real-time from live market data. Add WebSocket updates for instant portfolio changes.",
    status: "TODO",
    priority: "High",
    epic: "E1",
    storyPoints: 4,
    assignee: "Dave",
    progress: 0,
    dependencies: ["S22"],
    createdDate: "2025-06-21",
  },
  {
    id: "S24",
    title: "Add Portfolio Analytics Dashboard",
    description:
      "Create comprehensive portfolio analytics showing sector allocation, performance attribution, risk metrics, and comparison to market benchmarks using live data.",
    status: "TODO",
    priority: "Medium",
    epic: "E1",
    storyPoints: 5,
    assignee: "Eve",
    progress: 0,
    dependencies: ["S23"],
    createdDate: "2025-06-21",
  },
];
