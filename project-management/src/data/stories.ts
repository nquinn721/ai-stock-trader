// Stories data - Small, focused stories without progress tracking
import { Story } from "./types";

export const stories: Story[] = [
  {
    id: "S1",
    title: "Add stock price formatting helper",
    description:
      "Create a utility function to format stock prices with proper currency symbols and decimal places.",
    status: "DONE",
    priority: "Low",
    epic: "E1",
    storyPoints: 1,
    sprint: 1,
    assignee: "Alice",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-01",
    completedDate: "2025-06-02",
  },
  {
    id: "S2",
    title: "Fix WebSocket connection timeout",
    description:
      "Add timeout handling for WebSocket connections to prevent hanging connections.",
    status: "DONE",
    priority: "Medium",
    epic: "E1",
    storyPoints: 2,
    sprint: 1,
    assignee: "Bob",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-02",
    completedDate: "2025-06-03",
  },
  {
    id: "S3",
    title: "Add loading spinner to stock cards",
    description: "Display a loading spinner while stock data is being fetched.",
    status: "DONE",
    priority: "Low",
    epic: "E1",
    storyPoints: 1,
    sprint: 1,
    assignee: "Carol",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-03",
    completedDate: "2025-06-04",
  },
  {
    id: "S4",
    title: "Validate stock symbol input",
    description:
      "Add client-side validation for stock symbol input fields (uppercase, length limits).",
    status: "DONE",
    priority: "Medium",
    epic: "E1",
    storyPoints: 2,
    sprint: 1,
    assignee: "Dave",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-04",
    completedDate: "2025-06-05",
  },
  {
    id: "S5",
    title: "Add error boundary to dashboard",
    description:
      "Implement React error boundary to catch and display component errors gracefully.",
    status: "DONE",
    priority: "Medium",
    epic: "E1",
    storyPoints: 2,
    sprint: 2,
    assignee: "Eve",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-05",
    completedDate: "2025-06-06",
  },
  {
    id: "S6",
    title: "Create empty state component",
    description:
      "Build a reusable component to display when no data is available (no stocks, no portfolio, etc).",
    status: "DONE",
    priority: "Low",
    epic: "E1",
    storyPoints: 1,
    sprint: 2,
    assignee: "Frank",
    progress: 100,
    dependencies: [],
    createdDate: "2025-06-06",
    completedDate: "2025-06-21",
  },
  {
    id: "S7",
    title: "Add stock symbol search autocomplete",
    description:
      "Implement autocomplete dropdown for stock symbol input using predefined stock list.",
    status: "DONE",
    priority: "Medium",
    epic: "E2",
    storyPoints: 3,
    sprint: 2,
    assignee: "Grace",
    progress: 100,
    dependencies: ["S4"],
    createdDate: "2025-06-07",
    completedDate: "2025-06-21",
  },
  {
    id: "S8",
    title: "Fix portfolio percentage calculations",
    description:
      "Correct the percentage calculation logic for portfolio gains/losses display.",
    status: "DONE",
    priority: "High",
    epic: "E2",
    storyPoints: 2,
    sprint: 3,
    assignee: "Henry",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-08",
    completedDate: "2025-06-21",
  },
  {
    id: "S9",
    title: "Create API health check endpoint",
    description:
      "Add a simple /health endpoint to monitor API availability and response time.",
    status: "DONE",
    priority: "Medium",
    epic: "E3",
    storyPoints: 1,
    assignee: "Jack",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-10",
    completedDate: "2025-06-21",
  },
  // CLIENT TESTING STORIES
  {
    id: "S10",
    title: "Write unit tests for React components",
    description:
      "Create comprehensive unit tests for all React components using Jest and React Testing Library. Target 90%+ coverage for Dashboard, QuickTrade, PortfolioChart, and StockCard components.",
    status: "DONE",
    priority: "High",
    epic: "E2",
    storyPoints: 5,
    assignee: "Alice",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-21",
    completedDate: "2025-06-21",
  },
  {
    id: "S11",
    title: "Write integration tests for API calls",
    description:
      "Create integration tests for all frontend API calls including stock data fetching, portfolio operations, and WebSocket connections. Mock external dependencies properly.",
    status: "DONE",
    priority: "High",
    epic: "E2",
    storyPoints: 3,
    assignee: "Bob",
    progress: 0,
    dependencies: ["S10"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-21",
  },
  {
    id: "S12",
    title: "Implement Playwright E2E tests",
    description:
      "Create end-to-end tests using Playwright covering user workflows: login, stock browsing, trading, portfolio viewing, and performance charts.",
    status: "DONE",
    priority: "High",
    epic: "E2",
    storyPoints: 5,
    assignee: "Carol",
    progress: 0,
    dependencies: ["S10"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-21",
  },
  // FONTAWESOME INTEGRATION
  {
    id: "S13",
    title: "Add FontAwesome to client application",
    description:
      "Install and configure FontAwesome icons library. Replace existing icons with FontAwesome icons for trading, portfolio, charts, and navigation elements.",
    status: "DONE",
    priority: "Medium",
    epic: "E3",
    storyPoints: 2,
    assignee: "Dave",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  },
  // DAY TRADING ANALYSIS STORIES
  {
    id: "S14",
    title: "Implement Technical Analysis Indicators",
    description:
      "Add RSI, MACD, Bollinger Bands, and Moving Averages calculations to backend. These are key indicators day traders use for entry/exit decisions.",
    status: "DONE",
    priority: "High",
    epic: "E4",
    storyPoints: 5,
    assignee: "Eve",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  },
  {
    id: "S15",
    title: "Add Volume Analysis System",
    description:
      "Implement volume spike detection, volume-weighted average price (VWAP), and volume trend analysis. High volume confirms price movements for day traders.",
    status: "DONE",
    priority: "High",
    epic: "E4",
    storyPoints: 3,
    assignee: "Frank",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  },
  {
    id: "S16",
    title: "Implement Support/Resistance Level Detection",
    description:
      "Create algorithm to identify key support and resistance levels using historical price data. Day traders use these for entry/exit points and stop-loss placement.",
    status: "DONE",
    priority: "High",
    epic: "E4",
    storyPoints: 4,
    assignee: "Grace",
    progress: 0,
    dependencies: ["S14"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  },
  {
    id: "S17",
    title: "Add Momentum and Volatility Indicators",
    description:
      "Implement momentum oscillators (Stochastic, Williams %R) and volatility measures (ATR, volatility percentage). Critical for day trading timing decisions.",
    status: "DONE",
    priority: "High",
    epic: "E4",
    storyPoints: 3,
    assignee: "Henry",
    progress: 0,
    dependencies: ["S14"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  },
  {
    id: "S18",
    title: "Create Pattern Recognition System",
    description:
      "Implement candlestick pattern recognition (Doji, Hammer, Engulfing) and chart patterns (Head & Shoulders, Triangles, Flags) using AI/ML models for automated detection.",
    status: "DONE",
    priority: "High",
    epic: "E4",
    storyPoints: 8,
    assignee: "Ivy",
    progress: 0,
    dependencies: ["S14", "S16"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  },
  {
    // LIVE RECOMMENDATIONS SYSTEM  {
    id: "S19",
    title: "Build AI-Powered Trading Recommendations Engine",
    description:
      "Create comprehensive ML-based trading recommendations system integrating ALL implemented indicators and analysis: TECHNICAL INDICATORS (RSI 14-period momentum, MACD 12/26/9 trend-following, Bollinger Bands 20/2 volatility bands, SMA 20/50/200 trend analysis, EMA 9/12/26 exponential smoothing, Stochastic %K/%D 14/3 momentum oscillator, Williams %R 14-period momentum, ATR 14-period volatility measure, Historical/Average Volatility with regime detection), VOLUME ANALYSIS (VWAP intraday benchmark, Volume spike detection with strength analysis, Volume trend analysis increasing/decreasing/stable, Volume confirmation for breakouts), SUPPORT/RESISTANCE (Multi-level support/resistance identification, Pivot points classical/Fibonacci, Key level breakout detection, Comprehensive S/R analysis with strength scoring), PATTERN RECOGNITION (Candlestick patterns: Doji, Hammer, Engulfing, Star formations; Chart patterns: Double Top/Bottom, Head & Shoulders, Triangle/Wedge/Flag/Pennant formations with AI confidence scoring), BREAKOUT ANALYSIS (Trend direction detection upward/downward/sideways, Volatility-based breakout confirmation, Momentum scoring with acceleration analysis), ADVANCED ML FEATURES (Neural Network predictions, SVM-like classification, Ensemble model weighting, LSTM sequence analysis, Transformer attention mechanisms, Mean reversion vs momentum scoring, Fractal dimension analysis, Hurst exponent calculation, Volatility clustering detection), NEWS & SENTIMENT (Real-time news fetching and analysis, Financial sentiment lexicon with 50+ terms, Social sentiment scoring, News impact on price correlation), RISK MANAGEMENT (Dynamic position sizing recommendations, Stop-loss/take-profit level calculation, Risk/reward ratio optimization, Portfolio correlation analysis), and MARKET MICROSTRUCTURE (Bid-ask spread proxy, Order flow inference, Market structure analysis, Relative strength calculations). System integrates 8 modules (breakout, ml-analysis, news, trading, stock, order-management, paper-trading, websocket) to generate real-time BUY/SELL/HOLD/WATCH recommendations with confidence scores 0-1, entry/exit price levels, risk parameters, detailed reasoning, and multi-timeframe analysis (1m/5m/1h/1d).",
    status: "TODO",
    priority: "Critical",
    epic: "E5",
    storyPoints: 15,
    assignee: "Jack",
    progress: 0,
    dependencies: ["S14", "S15", "S16", "S17", "S18"],
    createdDate: "2025-06-21",
  },  {
    id: "S20",
    title: "Implement Real-Time Notification System",
    description:
      "Create comprehensive real-time notification system that alerts users to: Trading Opportunities (buy/sell signals from S19 recommendation engine with confidence scores), Pattern Alerts (breakout confirmations, pattern completions, support/resistance breaks), Technical Alerts (RSI overbought/oversold, MACD crossovers, Bollinger Band squeezes, volume spikes), Risk Management (stop-loss triggers, take-profit targets, position sizing alerts), Market Events (news sentiment changes, earnings announcements, analyst upgrades/downgrades), and Multi-timeframe Alerts (1m scalping opportunities, 5m momentum shifts, 1h trend changes). Features: Customizable alert thresholds, priority-based notifications, push notifications, email alerts, in-app notifications, alert history, and smart filtering to prevent notification overload.",
    status: "DONE",
    priority: "Critical",
    epic: "E5",
    storyPoints: 6,
    assignee: "Alice",
    progress: 0,
    dependencies: ["S19"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-23",
  },
  {
    id: "S21",
    title: "Add Risk Management Integration",
    description:
      "Integrate position sizing, risk/reward ratios, and portfolio risk assessment into recommendation system. Include stop-loss and take-profit suggestions.",
    status: "DONE",
    priority: "High",
    epic: "E5",
    storyPoints: 4,
    assignee: "Bob",
    progress: 0,
    dependencies: ["S19"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  }, // PORTFOLIO LIVE DATA VERIFICATION
  {
    id: "S22",
    title: "Audit Portfolio Data Sources",
    description:
      "Verify all portfolio data comes from live API endpoints. Remove any mock data from backend portfolio services and ensure real-time data flow.",
    status: "DONE",
    priority: "Critical",
    epic: "E1",
    storyPoints: 3,
    assignee: "Carol",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  },
  {
    id: "S23",
    title: "Implement Live Portfolio Performance Tracking",
    description:
      "Ensure portfolio performance metrics (P&L, returns, positions) update in real-time from live market data. Add WebSocket updates for instant portfolio changes.",
    status: "DONE",
    priority: "High",
    epic: "E1",
    storyPoints: 4,
    assignee: "Dave",
    progress: 0,
    dependencies: ["S22"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  },
  {
    id: "S24",
    title: "Add Portfolio Analytics Dashboard",
    description:
      "Create comprehensive portfolio analytics showing sector allocation, performance attribution, risk metrics, and comparison to market benchmarks using live data.",
    status: "DONE",
    priority: "Medium",
    epic: "E1",
    storyPoints: 5,
    assignee: "Eve",
    progress: 0,
    dependencies: ["S23"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-23",
  },
  {
    id: "S25",
    title: "Implement Advanced Order Management System",
    description:
      "Build comprehensive order management system supporting entry orders, stop-loss orders, and take-profit orders with automatic execution. Features include: conditional order placement (buy at entry price), automatic stop-loss execution (sell when price drops to stop level), take-profit orders (sell when price reaches profit target), order queue management, real-time price monitoring for order triggers, order status tracking (pending/triggered/executed/cancelled), portfolio integration with order P&L tracking, and WebSocket notifications for order events. All orders execute automatically based on live market data with no manual intervention required.",
    status: "DONE",
    priority: "High",
    epic: "E1",
    storyPoints: 8,
    assignee: "Trading Team",
    progress: 0,
    dependencies: ["S23"],
    createdDate: "2025-06-22",
    completedDate: "2025-06-22",
  },
  {
    id: "S26",
    title: "ML Model Integration Audit and Strategy",
    description:
      "Conduct comprehensive audit of current trading logic and identify opportunities to replace manual calculations with trained machine learning models. Areas to evaluate: breakout strategy calculations (neural network, SVM, ensemble predictions), sentiment analysis enhancement (NLP models for news analysis), portfolio optimization (reinforcement learning for position sizing), risk management (ML-based stop-loss positioning), pattern recognition (CNN models for chart pattern detection), market prediction (LSTM/Transformer models for price forecasting), trading signal generation (ensemble ML models), and performance attribution analysis. Create implementation roadmap prioritizing highest-impact ML integrations with clear ROI metrics.",
    status: "DONE",
    priority: "Medium",
    epic: "E4",
    storyPoints: 5,
    assignee: "Data Science Team",
    progress: 0,
    dependencies: ["S22", "S23"],
    createdDate: "2025-06-22",
    completedDate: "2025-06-22",
  },
  {
    id: "S27",
    title: "ML Infrastructure Implementation - Phase 1 Execution",
    description:
      "Based on S26 findings, implement Phase 1 ML models: (1) Breakout Strategy Enhancement using Neural Network ensemble with 25-40% expected improvement in success rate, targeting technical indicators (RSI, MACD, Bollinger Bands), volume patterns, and market sentiment. (2) Dynamic Risk Management using Deep Q-Network for adaptive stop-loss and position sizing with 15-30% expected volatility reduction. Create feature engineering pipeline, implement model training infrastructure, deploy real-time inference endpoints, establish A/B testing framework, and integrate with existing order management system. Set up monitoring dashboards for model performance tracking and implement fallback mechanisms for production safety. Expected ROI: 200-400% within 6 months.",
    status: "TODO",
    priority: "High",
    epic: "E4",
    storyPoints: 8,
    assignee: "ML Engineering Team",
    progress: 0,
    dependencies: ["S26"],
    createdDate: "2025-06-22",
  },
];
