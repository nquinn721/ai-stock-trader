// Stories data - Small, focused stories without progress tracking
import { Story } from "./types";

export const stories: Story[] = [
  {
    id: "S1",
    title: "Add stock price formatting helper",
    description:
      "Create a utility function to format stock prices with proper currency symbols and decimal places.",
    status: "DONE",
    priority: "Low",
    epic: "E1",
    storyPoints: 1,
    sprint: 1,
    assignee: "Alice",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-01",
    completedDate: "2025-06-02",
  },
  {
    id: "S2",
    title: "Fix WebSocket connection timeout",
    description:
      "Add timeout handling for WebSocket connections to prevent hanging connections.",
    status: "DONE",
    priority: "Medium",
    epic: "E1",
    storyPoints: 2,
    sprint: 1,
    assignee: "Bob",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-02",
    completedDate: "2025-06-03",
  },
  {
    id: "S3",
    title: "Add loading spinner to stock cards",
    description: "Display a loading spinner while stock data is being fetched.",
    status: "DONE",
    priority: "Low",
    epic: "E1",
    storyPoints: 1,
    sprint: 1,
    assignee: "Carol",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-03",
    completedDate: "2025-06-04",
  },
  {
    id: "S4",
    title: "Validate stock symbol input",
    description:
      "Add client-side validation for stock symbol input fields (uppercase, length limits).",
    status: "DONE",
    priority: "Medium",
    epic: "E1",
    storyPoints: 2,
    sprint: 1,
    assignee: "Dave",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-04",
    completedDate: "2025-06-05",
  },
  {
    id: "S5",
    title: "Add error boundary to dashboard",
    description:
      "Implement React error boundary to catch and display component errors gracefully.",
    status: "DONE",
    priority: "Medium",
    epic: "E1",
    storyPoints: 2,
    sprint: 2,
    assignee: "Eve",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-05",
    completedDate: "2025-06-06",
  },
  {
    id: "S6",
    title: "Create empty state component",
    description:
      "Build a reusable component to display when no data is available (no stocks, no portfolio, etc).",
    status: "DONE",
    priority: "Low",
    epic: "E1",
    storyPoints: 1,
    sprint: 2,
    assignee: "Frank",
    progress: 100,
    dependencies: [],
    createdDate: "2025-06-06",
    completedDate: "2025-06-21",
  },
  {
    id: "S7",
    title: "Add stock symbol search autocomplete",
    description:
      "Implement autocomplete dropdown for stock symbol input using predefined stock list.",
    status: "DONE",
    priority: "Medium",
    epic: "E2",
    storyPoints: 3,
    sprint: 2,
    assignee: "Grace",
    progress: 100,
    dependencies: ["S4"],
    createdDate: "2025-06-07",
    completedDate: "2025-06-21",
  },
  {
    id: "S8",
    title: "Fix portfolio percentage calculations",
    description:
      "Correct the percentage calculation logic for portfolio gains/losses display.",
    status: "DONE",
    priority: "High",
    epic: "E2",
    storyPoints: 2,
    sprint: 3,
    assignee: "Henry",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-08",
    completedDate: "2025-06-21",
  },
  {
    id: "S9",
    title: "Create API health check endpoint",
    description:
      "Add a simple /health endpoint to monitor API availability and response time.",
    status: "DONE",
    priority: "Medium",
    epic: "E3",
    storyPoints: 1,
    assignee: "Jack",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-10",
    completedDate: "2025-06-21",
  },
  // CLIENT TESTING STORIES
  {
    id: "S10",
    title: "Write unit tests for React components",
    description:
      "Create comprehensive unit tests for all React components using Jest and React Testing Library. Target 90%+ coverage for Dashboard, QuickTrade, PortfolioChart, and StockCard components.",
    status: "DONE",
    priority: "High",
    epic: "E2",
    storyPoints: 5,
    assignee: "Alice",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-21",
    completedDate: "2025-06-21",
  },
  {
    id: "S11",
    title: "Write integration tests for API calls",
    description:
      "Create integration tests for all frontend API calls including stock data fetching, portfolio operations, and WebSocket connections. Mock external dependencies properly.",
    status: "DONE",
    priority: "High",
    epic: "E2",
    storyPoints: 3,
    assignee: "Bob",
    progress: 0,
    dependencies: ["S10"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-21",
  },
  {
    id: "S12",
    title: "Implement Playwright E2E tests",
    description:
      "Create end-to-end tests using Playwright covering user workflows: login, stock browsing, trading, portfolio viewing, and performance charts.",
    status: "DONE",
    priority: "High",
    epic: "E2",
    storyPoints: 5,
    assignee: "Carol",
    progress: 0,
    dependencies: ["S10"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-21",
  },
  // FONTAWESOME INTEGRATION
  {
    id: "S13",
    title: "Add FontAwesome to client application",
    description:
      "Install and configure FontAwesome icons library. Replace existing icons with FontAwesome icons for trading, portfolio, charts, and navigation elements.",
    status: "DONE",
    priority: "Medium",
    epic: "E3",
    storyPoints: 2,
    assignee: "Dave",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  },
  // DAY TRADING ANALYSIS STORIES
  {
    id: "S14",
    title: "Implement Technical Analysis Indicators",
    description:
      "Add RSI, MACD, Bollinger Bands, and Moving Averages calculations to backend. These are key indicators day traders use for entry/exit decisions.",
    status: "DONE",
    priority: "High",
    epic: "E4",
    storyPoints: 5,
    assignee: "Eve",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  },
  {
    id: "S15",
    title: "Add Volume Analysis System",
    description:
      "Implement volume spike detection, volume-weighted average price (VWAP), and volume trend analysis. High volume confirms price movements for day traders.",
    status: "DONE",
    priority: "High",
    epic: "E4",
    storyPoints: 3,
    assignee: "Frank",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  },
  {
    id: "S16",
    title: "Implement Support/Resistance Level Detection",
    description:
      "Create algorithm to identify key support and resistance levels using historical price data. Day traders use these for entry/exit points and stop-loss placement.",
    status: "DONE",
    priority: "High",
    epic: "E4",
    storyPoints: 4,
    assignee: "Grace",
    progress: 0,
    dependencies: ["S14"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  },
  {
    id: "S17",
    title: "Add Momentum and Volatility Indicators",
    description:
      "Implement momentum oscillators (Stochastic, Williams %R) and volatility measures (ATR, volatility percentage). Critical for day trading timing decisions.",
    status: "DONE",
    priority: "High",
    epic: "E4",
    storyPoints: 3,
    assignee: "Henry",
    progress: 0,
    dependencies: ["S14"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  },
  {
    id: "S18",
    title: "Create Pattern Recognition System",
    description:
      "Implement candlestick pattern recognition (Doji, Hammer, Engulfing) and chart patterns (Head & Shoulders, Triangles, Flags) using AI/ML models for automated detection.",
    status: "DONE",
    priority: "High",
    epic: "E4",
    storyPoints: 8,
    assignee: "Ivy",
    progress: 0,
    dependencies: ["S14", "S16"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  },
  {
    // LIVE RECOMMENDATIONS SYSTEM  {
    id: "S19",
    title: "Build AI-Powered Trading Recommendations Engine",
    description:
      "Create comprehensive ML-based trading recommendations system integrating ALL implemented indicators and analysis: TECHNICAL INDICATORS (RSI 14-period momentum, MACD 12/26/9 trend-following, Bollinger Bands 20/2 volatility bands, SMA 20/50/200 trend analysis, EMA 9/12/26 exponential smoothing, Stochastic %K/%D 14/3 momentum oscillator, Williams %R 14-period momentum, ATR 14-period volatility measure, Historical/Average Volatility with regime detection), VOLUME ANALYSIS (VWAP intraday benchmark, Volume spike detection with strength analysis, Volume trend analysis increasing/decreasing/stable, Volume confirmation for breakouts), SUPPORT/RESISTANCE (Multi-level support/resistance identification, Pivot points classical/Fibonacci, Key level breakout detection, Comprehensive S/R analysis with strength scoring), PATTERN RECOGNITION (Candlestick patterns: Doji, Hammer, Engulfing, Star formations; Chart patterns: Double Top/Bottom, Head & Shoulders, Triangle/Wedge/Flag/Pennant formations with AI confidence scoring), BREAKOUT ANALYSIS (Trend direction detection upward/downward/sideways, Volatility-based breakout confirmation, Momentum scoring with acceleration analysis), ADVANCED ML FEATURES (Neural Network predictions, SVM-like classification, Ensemble model weighting, LSTM sequence analysis, Transformer attention mechanisms, Mean reversion vs momentum scoring, Fractal dimension analysis, Hurst exponent calculation, Volatility clustering detection), NEWS & SENTIMENT (Real-time news fetching and analysis, Financial sentiment lexicon with 50+ terms, Social sentiment scoring, News impact on price correlation), RISK MANAGEMENT (Dynamic position sizing recommendations, Stop-loss/take-profit level calculation, Risk/reward ratio optimization, Portfolio correlation analysis), and MARKET MICROSTRUCTURE (Bid-ask spread proxy, Order flow inference, Market structure analysis, Relative strength calculations). System integrates 8 modules (breakout, ml-analysis, news, trading, stock, order-management, paper-trading, websocket) to generate real-time BUY/SELL/HOLD/WATCH recommendations with confidence scores 0-1, entry/exit price levels, risk parameters, detailed reasoning, and multi-timeframe analysis (1m/5m/1h/1d).",
    status: "DONE",
    priority: "Critical",
    epic: "E5",
    storyPoints: 15,
    assignee: "AI Assistant",
    progress: 100,
    dependencies: ["S14", "S15", "S16", "S17", "S18"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-23",
  },
  {
    id: "S20",
    title: "Implement Real-Time Notification System",
    description:
      "Create comprehensive real-time notification system that alerts users to: Trading Opportunities (buy/sell signals from S19 recommendation engine with confidence scores), Pattern Alerts (breakout confirmations, pattern completions, support/resistance breaks), Technical Alerts (RSI overbought/oversold, MACD crossovers, Bollinger Band squeezes, volume spikes), Risk Management (stop-loss triggers, take-profit targets, position sizing alerts), Market Events (news sentiment changes, earnings announcements, analyst upgrades/downgrades), and Multi-timeframe Alerts (1m scalping opportunities, 5m momentum shifts, 1h trend changes). Features: Customizable alert thresholds, priority-based notifications, push notifications, email alerts, in-app notifications, alert history, and smart filtering to prevent notification overload.",
    status: "DONE",
    priority: "Critical",
    epic: "E5",
    storyPoints: 6,
    assignee: "Alice",
    progress: 0,
    dependencies: ["S19"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-23",
  },
  {
    id: "S21",
    title: "Add Risk Management Integration",
    description:
      "Integrate position sizing, risk/reward ratios, and portfolio risk assessment into recommendation system. Include stop-loss and take-profit suggestions.",
    status: "DONE",
    priority: "High",
    epic: "E5",
    storyPoints: 4,
    assignee: "Bob",
    progress: 0,
    dependencies: ["S19"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  }, // PORTFOLIO LIVE DATA VERIFICATION
  {
    id: "S22",
    title: "Audit Portfolio Data Sources",
    description:
      "Verify all portfolio data comes from live API endpoints. Remove any mock data from backend portfolio services and ensure real-time data flow.",
    status: "DONE",
    priority: "Critical",
    epic: "E1",
    storyPoints: 3,
    assignee: "Carol",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  },
  {
    id: "S23",
    title: "Implement Live Portfolio Performance Tracking",
    description:
      "Ensure portfolio performance metrics (P&L, returns, positions) update in real-time from live market data. Add WebSocket updates for instant portfolio changes.",
    status: "DONE",
    priority: "High",
    epic: "E1",
    storyPoints: 4,
    assignee: "Dave",
    progress: 0,
    dependencies: ["S22"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-22",
  },
  {
    id: "S24",
    title: "Add Portfolio Analytics Dashboard",
    description:
      "Create comprehensive portfolio analytics showing sector allocation, performance attribution, risk metrics, and comparison to market benchmarks using live data.",
    status: "DONE",
    priority: "Medium",
    epic: "E1",
    storyPoints: 5,
    assignee: "Eve",
    progress: 0,
    dependencies: ["S23"],
    createdDate: "2025-06-21",
    completedDate: "2025-06-23",
  },
  {
    id: "S25",
    title: "Implement Advanced Order Management System",
    description:
      "Build comprehensive order management system supporting entry orders, stop-loss orders, and take-profit orders with automatic execution. Features include: conditional order placement (buy at entry price), automatic stop-loss execution (sell when price drops to stop level), take-profit orders (sell when price reaches profit target), order queue management, real-time price monitoring for order triggers, order status tracking (pending/triggered/executed/cancelled), portfolio integration with order P&L tracking, and WebSocket notifications for order events. All orders execute automatically based on live market data with no manual intervention required.",
    status: "DONE",
    priority: "High",
    epic: "E1",
    storyPoints: 8,
    assignee: "Trading Team",
    progress: 0,
    dependencies: ["S23"],
    createdDate: "2025-06-22",
    completedDate: "2025-06-22",
  },
  {
    id: "S26",
    title: "ML Model Integration Audit and Strategy",
    description:
      "Conduct comprehensive audit of current trading logic and identify opportunities to replace manual calculations with trained machine learning models. Areas to evaluate: breakout strategy calculations (neural network, SVM, ensemble predictions), sentiment analysis enhancement (NLP models for news analysis), portfolio optimization (reinforcement learning for position sizing), risk management (ML-based stop-loss positioning), pattern recognition (CNN models for chart pattern detection), market prediction (LSTM/Transformer models for price forecasting), trading signal generation (ensemble ML models), and performance attribution analysis. Create implementation roadmap prioritizing highest-impact ML integrations with clear ROI metrics.",
    status: "DONE",
    priority: "Medium",
    epic: "E4",
    storyPoints: 5,
    assignee: "Data Science Team",
    progress: 0,
    dependencies: ["S22", "S23"],
    createdDate: "2025-06-22",
    completedDate: "2025-06-22",
  },
  {
    id: "S27",
    title: "ML Infrastructure Implementation - Phase 1 Foundation",
    description:
      "Implement core ML infrastructure and high-impact models based on S26 audit findings. Build breakout detection ML model using neural networks with 30-40% accuracy improvement. Create dynamic risk management system with 25-35% volatility reduction. Establish feature engineering pipeline, A/B testing framework, and model monitoring with alerting. Set up GPU compute environment and model serving infrastructure. Expected ROI: 25-35% improvement in trading performance.",
    status: "DONE",
    priority: "High",
    epic: "E4",
    storyPoints: 13,
    sprint: 5,
    assignee: "ML Engineering Team",
    progress: 0,
    dependencies: ["S26"],
    createdDate: "2025-06-23",
  },
  {
    id: "S28",
    title: "ML Infrastructure Implementation - Phase 2 Intelligence",
    description:
      "Advanced ML analytics and optimization features. Implement sentiment analysis integration using NLP for financial news with 20-30% timing improvement. Build portfolio optimization algorithms using ML-enhanced Modern Portfolio Theory with 15-25% return improvement. Create advanced pattern recognition models using deep learning with 40-50% detection improvement. Develop performance attribution system with ML insights providing 25-35% strategy optimization.",
    status: "DONE",
    priority: "High",
    epic: "E4",
    storyPoints: 13,
    sprint: 6,
    assignee: "ML Engineering Team",
    progress: 0,
    dependencies: ["S27"],
    createdDate: "2025-06-23",
  },
  {
    id: "S29",
    title: "ML Infrastructure Implementation - Phase 3 Advanced Systems",
    description:
      "Advanced predictive capabilities and ensemble systems. Build market prediction models using time series analysis and deep learning with 20-30% timing improvement. Create advanced signal generation using ensemble models with 35-45% signal accuracy improvement. Implement multi-model ensemble systems with real-time model updates and dynamic weighting. Establish ML center of excellence with automated model retraining and performance optimization.",
    status: "DONE",
    priority: "Medium",
    epic: "E4",
    storyPoints: 13,
    sprint: 7,
    assignee: "ML Engineering Team",
    progress: 0,
    dependencies: ["S28"],
    createdDate: "2025-06-23",
  },
  {
    id: "S30",
    title: "Notification History and Management System",
    description:
      "Extend the notification system (S20) with comprehensive history and management features. Create notification history page showing past alerts with filtering by type, date, and priority. Add notification management dashboard for users to view, delete, and organize notifications. Implement notification analytics showing alert performance and user engagement metrics. Add bulk actions for notification cleanup and archiving. Include search functionality and export capabilities for notification data.",
    status: "DONE",
    priority: "Medium",
    epic: "E3",
    storyPoints: 5,
    sprint: 3,
    assignee: "Frontend Team",
    progress: 0,
    dependencies: ["S20"],
    createdDate: "2025-06-23",
    completedDate: "2025-06-23",
  },
  {
    id: "S33",
    title: "Remove Latest Trade Signals from Client",
    description:
      "Clean up the frontend by removing the latest trade signals display from the client dashboard. This includes removing the signals section from the main dashboard, cleaning up related UI components, removing unused signal display logic, and updating the dashboard layout to optimize space utilization. Ensure that real-time trading signals are still available through the appropriate trading interfaces but not cluttering the main dashboard view.",
    status: "DONE",
    priority: "Low",
    epic: "E3",
    storyPoints: 2,
    sprint: 3,
    assignee: "Frontend Team",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-23",
    completedDate: "2025-06-23",
  },
  {
    id: "S34",
    title: "Advanced Trading Tab in Quick Trade Interface",
    description:
      "Add an advanced trading tab to the existing QuickTrade component with sophisticated trading features. Include advanced order types (stop-limit, trailing stop, bracket orders), technical analysis tools integration, position sizing calculator based on risk percentage, advanced charting with multiple timeframes, options trading interface (if applicable), and algorithmic trading strategy selection. Add real-time P&L tracking, risk metrics display, and trade execution analytics. Ensure proper validation and risk management controls.",
    status: "DONE",
    priority: "Medium",
    epic: "E2",
    storyPoints: 8,
    sprint: 4,
    assignee: "Full Stack Team",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-23",
    completedDate: "2025-06-23",
  },

  // === ML INFRASTRUCTURE IMPLEMENTATION PHASE STORIES ===  // S27 Phase 1: Foundation Infrastructure
  {
    id: "S27A",
    title: "ML Infrastructure Foundation - Data Pipeline",
    description:
      "Establish the foundational data pipeline for ML model training and inference. Create data ingestion services for historical and real-time market data, implement feature engineering pipeline with technical indicators calculation, establish data validation and quality checks, create data versioning and lineage tracking, and implement efficient data storage solutions optimized for ML workloads. Include automated data preprocessing, normalization, and feature extraction processes.",
    status: "DONE",
    priority: "High",
    epic: "E3",
    storyPoints: 13,
    sprint: 5,
    assignee: "AI Assistant",
    progress: 100,
    dependencies: ["S26"],
    createdDate: "2025-06-23",
    completedDate: "2025-06-23",
  },
  {
    id: "S27B",
    title: "ML Model Training Infrastructure",
    description:
      "Set up comprehensive ML model training infrastructure including model training pipeline with automated hyperparameter tuning, cross-validation framework for model validation, experiment tracking and management system, model versioning and artifact storage, automated model evaluation and comparison tools, and integration with cloud computing resources for scalable training. Implement MLOps best practices for reproducible model development.",
    status: "DONE",
    priority: "High",
    epic: "E3",
    storyPoints: 21,
    sprint: 5,
    assignee: "ML Team",
    progress: 0,
    dependencies: ["S27A"],
    createdDate: "2025-06-23",
    completedDate: "2025-06-23",
  },
  {
    id: "S27C",
    title: "Breakout Detection ML Model Implementation",
    description:
      "Develop and implement the breakout detection ML model using pattern recognition algorithms. Create feature engineering for price patterns, volume analysis, and technical indicators. Implement deep learning models (CNN/RNN) for pattern recognition, train models on historical market data with proper validation, integrate real-time inference capabilities, and establish model performance monitoring. Include backtesting framework and A/B testing infrastructure for model validation.",
    status: "DONE",
    priority: "High",
    epic: "E3",
    storyPoints: 21,
    sprint: 5,
    assignee: "ML Team",
    progress: 0,
    dependencies: ["S27B"],
    createdDate: "2025-06-23",
    completedDate: "2025-06-23",
  },
  {
    id: "S27D",
    title: "Dynamic Risk Management ML System",
    description:
      "Implement ML-driven dynamic risk management system that adapts to market conditions. Develop risk assessment models using volatility prediction, correlation analysis, and portfolio optimization techniques. Create dynamic position sizing algorithms, implement adaptive stop-loss mechanisms, establish real-time risk monitoring and alerting, and integrate with existing portfolio management systems. Include stress testing and scenario analysis capabilities.",
    status: "DONE",
    priority: "High",
    epic: "E3",
    storyPoints: 21,
    sprint: 6,
    assignee: "ML Team",
    progress: 0,
    dependencies: ["S27C"],
    createdDate: "2025-06-23",
    completedDate: "2025-06-23",
  },
  {
    id: "S27E",
    title: "ML Model Monitoring and A/B Testing Framework",
    description:
      "Establish comprehensive monitoring and testing framework for ML models in production. Implement model performance tracking, drift detection, and automated retraining triggers. Create A/B testing infrastructure for model comparison, establish champion/challenger model deployment patterns, implement real-time model health monitoring, and create alerting systems for model degradation. Include automated rollback capabilities and performance analytics dashboard.",
    status: "DONE",
    priority: "High",
    epic: "E3",
    storyPoints: 13,
    sprint: 6,
    assignee: "ML Team",
    progress: 0,
    dependencies: ["S27D"],
    createdDate: "2025-06-23",
    completedDate: "2025-06-23",
  },

  // S28 Phase 2: Intelligence Enhancement
  {
    id: "S28A",
    title: "Sentiment Analysis ML Integration",
    description:
      "Implement NLP-based sentiment analysis for market news and social media data. Create news data ingestion pipeline, implement sentiment scoring algorithms using transformer models, establish real-time sentiment monitoring, integrate sentiment signals with trading decisions, and create sentiment-based risk adjustments. Include multi-source sentiment aggregation and temporal sentiment analysis for improved timing.",
    status: "DONE",
    priority: "Medium",
    epic: "E3",
    storyPoints: 21,
    sprint: 7,
    assignee: "ML Team",
    progress: 100,
    dependencies: ["S27E"],
    createdDate: "2025-06-23",
    completedDate: "2025-06-23",
  },
  {
    id: "S28B",
    title: "ML-Enhanced Portfolio Optimization",
    description:
      "Develop ML-enhanced Modern Portfolio Theory implementation with dynamic optimization. Create machine learning models for return prediction, risk estimation, and correlation forecasting. Implement dynamic asset allocation algorithms, establish rebalancing triggers based on ML insights, create multi-objective optimization for risk-return-ESG factors, and integrate with existing portfolio management. Include regime detection for adaptive strategies.",
    status: "DONE",
    priority: "Medium",
    epic: "E3",
    storyPoints: 21,
    sprint: 7,
    assignee: "ML Team",
    progress: 100,
    dependencies: ["S28A"],
    createdDate: "2025-06-23",
    completedDate: "2025-06-23",
  },
  {
    id: "S28C",
    title: "Advanced Pattern Recognition System",
    description:
      "Implement deep learning-based pattern recognition for complex market patterns. Develop convolutional neural networks for chart pattern recognition, create sequence models for time series patterns, implement ensemble methods combining multiple pattern detection approaches, establish pattern confidence scoring, and integrate with trading signal generation. Include visualization tools for pattern analysis and validation.",
    status: "DONE",
    priority: "Medium",
    epic: "E3",
    storyPoints: 21,
    sprint: 8,
    assignee: "ML Team",
    progress: 100,
    dependencies: ["S28B"],
    createdDate: "2025-06-23",
    completedDate: "2025-06-23",
  },
  {
    id: "S28D",
    title: "Advanced Feature Engineering Pipeline",
    description:
      "Create comprehensive ML feature engineering pipeline for market data processing. Implement real-time feature extraction from market data, develop advanced technical indicator calculations, establish feature validation and quality scoring, create multi-timeframe feature aggregation, implement streaming feature updates, and integrate with ML model training infrastructure. Include feature importance analysis, automated feature selection, and performance optimization for large-scale data processing.",
    status: "DONE",
    priority: "Medium",
    epic: "E28",
    storyPoints: 13,
    sprint: 8,
    assignee: "ML Team",
    progress: 100,
    dependencies: ["S28C"],
    createdDate: "2025-06-23",
    completedDate: "2025-06-23",
  },

  // S29 Phase 3: Advanced Predictive Systems
  {
    id: "S29A",
    title: "Market Prediction ML Models",
    description:
      "Develop advanced machine learning models for market prediction using ensemble methods. Create LSTM/GRU networks for time series forecasting, implement transformer models for multi-variate prediction, establish ensemble methods combining multiple prediction approaches, create prediction confidence intervals and uncertainty quantification, and integrate with trading decision systems. Include regime-aware prediction models and adaptive forecasting.",
    status: "DONE",
    priority: "High",
    epic: "E28",
    storyPoints: 21,
    sprint: 9,
    assignee: "AI Assistant",
    progress: 100,
    dependencies: ["S28D"],
    createdDate: "2025-06-23",
    completedDate: "2025-06-23",
  },
  {
    id: "S29B",
    title: "Advanced Signal Generation Ensemble",
    description:
      "Implement sophisticated ensemble system for trading signal generation combining multiple ML models. Create meta-learning algorithms for signal combination, implement dynamic signal weighting based on market conditions, establish signal conflict resolution mechanisms, create multi-timeframe signal fusion, and integrate with risk management systems. Include signal attribution and explainability features.",
    status: "DONE",
    priority: "High",
    epic: "E28",
    storyPoints: 21,
    sprint: 9,
    assignee: "AI Assistant",
    progress: 100,
    dependencies: ["S29A"],
    createdDate: "2025-06-23",
    completedDate: "2025-06-23",
  },
  {
    id: "S29C",
    title: "Real-time ML Model Updates",
    description:
      "Implement system for real-time ML model updates and online learning. Create incremental learning algorithms for model adaptation, implement streaming data processing for real-time feature updates, establish online model validation and deployment, create adaptive model selection based on market conditions, and integrate with existing ML infrastructure. Include automated model lifecycle management and performance optimization.",
    status: "DONE",
    priority: "High",
    epic: "E28",
    storyPoints: 21,
    sprint: 10,
    assignee: "AI Assistant",
    progress: 100,
    dependencies: ["S29B"],
    createdDate: "2025-06-23",
    completedDate: "2025-06-23",
  },
  {
    id: "S29D",
    title: "Multi-Model Ensemble System",
    description:
      "Create comprehensive multi-model ensemble system integrating all ML components. Implement model orchestration for coordinated decision making, create ensemble optimization algorithms, establish model interaction and feedback mechanisms, implement system-wide performance monitoring, and create unified ML API for frontend integration. Include explainable AI features and comprehensive testing framework.",
    status: "DONE",
    priority: "High",
    epic: "E28",
    storyPoints: 13,
    sprint: 10,
    assignee: "AI Assistant",
    progress: 100,
    dependencies: ["S29C"],
    createdDate: "2025-06-23",
    completedDate: "2025-06-23",
  },

  // === NEW SPRINT 5 ENHANCEMENT STORIES ===

  {
    id: "S30A",
    title: "Comprehensive Unit Testing Upgrade",
    description:
      "Upgrade and expand unit testing coverage throughout the entire application to achieve 95%+ coverage across all modules. Update existing tests, add missing test cases, and implement comprehensive testing patterns for all services, controllers, components, and utilities. Include backend testing for all services and controllers with 95%+ coverage, frontend testing for all React components and hooks, integration tests for complex service interactions, mock external API calls, test error handling and edge cases, performance testing for critical endpoints, and create reusable testing utilities and helpers.",
    status: "DONE",
    priority: "High",
    epic: "E1", // Testing & Quality Assurance
    storyPoints: 8,
    sprint: 5,
    assignee: "Development Team",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-24",
  },
  {
    id: "S30B",
    title: "MobX State Management Migration",
    description:
      "Migrate all service calls and data logic from React components to centralized MobX stores. Create centralized stores for stock data, portfolio operations, AI recommendations, user preferences, and WebSocket management. Move all API calls from components to stores, implement intelligent caching strategies, add offline-first capabilities, migrate WebSocket handling to stores, implement proper loading states management, add optimistic updates for better UX, and create data synchronization mechanisms. Update all React components to use MobX stores and remove direct API calls.",
    status: "DONE",
    priority: "High",
    epic: "E2", // Frontend Architecture Enhancement
    storyPoints: 13,
    sprint: 5,
    assignee: "Development Team",
    progress: 0,
    dependencies: ["S30A"],
    createdDate: "2025-06-24",
    completedDate: "2025-06-24",
  },
  {
    id: "S30C",
    title: "Automated Trading System Backend",
    description:
      "Create a comprehensive automated trading system that executes trades based on AI recommendations and user-defined portfolio rules. Create AutoTradingService for trade execution logic, implement portfolio rule engine for trade validation, create automated order management system, implement risk management and position sizing, add comprehensive trade logging and audit trails, create automated trading scheduler and job queue, implement emergency stop mechanisms, integrate with existing RecommendationService, connect with portfolio management system, and implement real-time market data processing with WebSocket notifications.",
    status: "DONE",
    priority: "High",
    epic: "E28", // Automated Trading & AI Enhancement
    storyPoints: 21,
    sprint: 5,
    assignee: "Development Team",
    progress: 0,
    dependencies: ["S30B"],
    createdDate: "2025-06-24",
  },
  {
    id: "S30D",
    title: "Automated Trading Frontend Interface",
    description:
      "Create a comprehensive frontend interface for the automated trading system, allowing users to configure trading rules, start/stop automated trading sessions per portfolio or globally, and monitor automated trading performance in real-time. Create TradingRulesManager component for rule configuration, implement rule builder with drag-and-drop interface, add rule templates for common strategies, create AutoTradingDashboard for session management, implement per-portfolio and global trading controls, add emergency stop functionality, display live trading activity feed, show real-time P&L tracking, implement trade execution notifications, and create comprehensive trading performance analytics.",
    status: "DONE",
    priority: "High",
    epic: "E28", // Automated Trading & AI Enhancement
    storyPoints: 13,
    sprint: 6,
    assignee: "Development Team",
    progress: 0,
    dependencies: ["S30C"],
    createdDate: "2025-06-24",
  },
  {
    id: "S31",
    title: "Portfolio Analytics Dashboard",
    description:
      "Create a comprehensive portfolio analytics dashboard that provides detailed insights into portfolio performance, risk metrics, and comparative analysis. Display total return, annualized return, and benchmark comparison with Sharpe ratio, maximum drawdown, and volatility metrics. Include Value at Risk (VaR) calculations, portfolio beta relative to market indices, correlation matrix between holdings, and sector diversification analysis. Add performance attribution showing sector contribution, individual position impact, and asset allocation visualization. Provide benchmark comparison with S&P 500, peer portfolio performance comparison, and rolling performance windows.",
    status: "DONE",
    priority: "Medium",
    epic: "E2",
    storyPoints: 8,
    sprint: 6,
    assignee: "Frontend Team",
    progress: 0,
    dependencies: ["S24"],
    createdDate: "2025-06-24",
  },
  {
    id: "S32",
    title: "WebSocket Real-time Data Optimization",
    description:
      "Optimize WebSocket connections for better performance and reliability. Implement connection pooling, automatic reconnection with exponential backoff, message queuing for offline scenarios, and bandwidth optimization. Add WebSocket health monitoring, connection state management, and error recovery mechanisms. Ensure efficient data transmission and reduce network overhead.",
    status: "DONE",
    priority: "Medium",
    epic: "E3",
    storyPoints: 5,
    sprint: 5,
    assignee: "Backend Team",
    progress: 0,
    dependencies: [],
    createdDate: "2025-06-24",
    completedDate: "2025-06-25",
  },
  {
    id: "S35",
    title: "Advanced Order Management System",
    description:
      "Implement a comprehensive order management system supporting multiple order types, bracket orders, and advanced trading strategies. Include Market, Limit, Stop Loss, and Stop Limit orders, bracket orders (entry + profit target + stop loss), trailing stop orders with configurable trail amounts, One-Cancels-Other (OCO) order pairs, and If-Touched (IT) and Good-Till-Cancelled (GTC) orders. Add conditional order logic with price-based, time-based, and technical indicator-based triggers. Create visual order ladder interface, drag-and-drop order modification, real-time order status updates, and comprehensive risk management integration.",
    status: "TODO",
    priority: "High",
    epic: "E5",
    storyPoints: 13,
    sprint: 7,
    assignee: "Full Stack Team",
    progress: 0,
    dependencies: ["S25"],
    createdDate: "2025-06-24",
  },
  {
    id: "S36",
    title: "Real-time Market Scanner and Screener",
    description:
      "Create a powerful market scanner and stock screener for identifying trading opportunities in real-time. Implement filters for price, volume, market cap, technical indicators, and fundamental metrics. Add preset screener templates for different trading strategies (momentum, value, growth, day trading patterns). Include real-time alerts for screener matches, customizable scanning intervals, and integration with the recommendation engine. Provide advanced filtering capabilities and saved screener configurations.",
    status: "TODO",
    priority: "High",
    epic: "E5",
    storyPoints: 8,
    sprint: 7,
    assignee: "Full Stack Team",
    progress: 0,
    dependencies: ["S19"],
    createdDate: "2025-06-24",
  },
  {
    id: "S37",
    title: "Four Stock Portfolios for Day Trading",
    description:
      "Create four specialized portfolio templates optimized for different day trading strategies and account sizes. Include Micro Account Starter ($1,000 - 3 positions max), Small Account Basic ($5,000 - 5 positions max), Day Trading Standard ($25,000+ - unlimited day trades), and Day Trading Pro ($50,000+ - advanced features). Each portfolio type has customized risk management, position sizing rules, and day trading specific features. Add portfolio type selection during portfolio creation and automatic rule enforcement based on portfolio type.",
    status: "DONE",
    priority: "High",
    epic: "E2",
    storyPoints: 5,
    sprint: 4,
    assignee: "Backend Team",
    progress: 100,
    dependencies: [],
    createdDate: "2025-06-24",
    completedDate: "2025-06-24",
  },
  {
    id: "S38",
    title: "AI Trading Assistant with Explainable Recommendations",
    description:
      "Create an AI-powered trading assistant that provides explainable trading recommendations with detailed reasoning and confidence scores. Implement natural language explanations for why the AI suggests specific trades, include risk assessment and market context, provide alternative strategies and their trade-offs, and offer personalized coaching based on user trading patterns. Add interactive Q&A functionality where users can ask the AI about specific trades or market conditions. Include educational content delivery and adaptive learning based on user preferences.",
    status: "TODO",
    priority: "High",
    epic: "E5",
    storyPoints: 13,
    sprint: 8,
    assignee: "AI Team",
    progress: 0,
    dependencies: ["S19", "S29B"],
    createdDate: "2025-06-24",
  },
  {
    id: "S39",
    title: "Real-time Predictive Analytics Dashboard",
    description:
      "Develop a comprehensive predictive analytics dashboard that uses machine learning to forecast market movements and trading opportunities. Implement real-time price prediction models, volatility forecasting, sector rotation predictions, and market regime detection. Create interactive visualizations showing prediction confidence intervals, model performance metrics, and historical accuracy. Include customizable prediction timeframes (1 hour, 1 day, 1 week) and integration with the recommendation engine for actionable insights.",
    status: "TODO",
    priority: "Medium",
    epic: "E4",
    storyPoints: 13,
    sprint: 9,
    assignee: "ML Team",
    progress: 0,
    dependencies: ["S29A", "S31"],
    createdDate: "2025-06-24",
  },
  {
    id: "S40",
    title: "Autonomous Trading Agent Builder",
    description:
      "Create a no-code/low-code interface for building autonomous trading agents that can execute trades based on complex rule sets and AI recommendations. Implement a visual rule builder with drag-and-drop functionality, pre-built strategy templates, backtesting capabilities, and risk management controls. Allow users to create custom trading agents with specific entry/exit criteria, position sizing rules, and risk parameters. Include agent performance monitoring, paper trading validation, and gradual deployment to live trading.",
    status: "TODO",
    priority: "Medium",
    epic: "E5",
    storyPoints: 21,
    sprint: 10,
    assignee: "Full Stack Team",
    progress: 0,
    dependencies: ["S30C", "S30D", "S38"],
    createdDate: "2025-06-24",
  },
  {
    id: "S41",
    title: "Multi-Asset Intelligence and Alternative Data",
    description:
      "Expand the platform to support multi-asset trading intelligence including cryptocurrencies, forex, commodities, and bonds. Integrate alternative data sources such as social sentiment, satellite data, economic indicators, and options flow data. Create cross-asset correlation analysis, multi-asset portfolio optimization, and unified risk management across asset classes. Implement asset-specific trading strategies and risk models tailored to each asset class characteristics.",
    status: "TODO",
    priority: "Low",
    epic: "E6",
    storyPoints: 34,
    sprint: 11,
    assignee: "Full Stack Team",
    progress: 0,
    dependencies: ["S40"],
    createdDate: "2025-06-24",
  },
];
