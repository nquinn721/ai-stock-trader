.portfolio-chart-container {
  background: linear-gradient(135deg, #1e3a8a 0%, #3b82f6 50%, #8b5cf6 100%);
  border-radius: 16px;
  padding: 24px;
  color: white;
  font-family: "Inter", "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15), 0 8px 16px rgba(0, 0, 0, 0.1);
  position: relative;
  overflow: visible; /* Changed from hidden to visible */
  border: 1px solid rgba(255, 255, 255, 0.1);
  display: flex;
  flex-direction: column;
  min-height: fit-content; /* Ensure content fits */
}

.portfolio-chart-container::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(
      circle at 20% 80%,
      rgba(255, 255, 255, 0.1) 0%,
      transparent 50%
    ),
    radial-gradient(
      circle at 80% 20%,
      rgba(255, 255, 255, 0.08) 0%,
      transparent 50%
    );
  pointer-events: none;
}

.chart-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 20px;
  flex-wrap: wrap;
  gap: 15px;
}

.chart-title h3 {
  margin: 0;
  font-size: 1.5rem;
  font-weight: 700;
  color: rgba(255, 255, 255, 0.98);
  letter-spacing: -0.025em;
}

.chart-value {
  font-size: 2.2rem;
  font-weight: 800;
  margin-top: 8px;
  color: #ffffff;
  text-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
  letter-spacing: -0.02em;
}

.chart-controls {
  display: flex;
  gap: 15px;
  align-items: center;
  flex-wrap: wrap;
}

.metric-selector,
.timeframe-selector {
  display: flex;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  padding: 4px;
  gap: 2px;
}

.metric-btn,
.timeframe-btn {
  background: transparent;
  border: none;
  color: rgba(255, 255, 255, 0.7);
  padding: 8px 12px;
  border-radius: 6px;
  font-size: 0.85rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  text-transform: uppercase;
  font-family: inherit;
}

.metric-btn:hover,
.timeframe-btn:hover {
  background: rgba(255, 255, 255, 0.15);
  color: rgba(255, 255, 255, 0.9);
  transform: translateY(-1px);
}

.metric-btn.active,
.timeframe-btn.active {
  background: rgba(255, 255, 255, 0.2);
  color: #fff;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
}

.chart-container {
  margin: 20px 0;
  background: rgba(255, 255, 255, 0.08);
  border-radius: 12px;
  padding: 16px; /* Reduced padding */
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.12);
  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);
  flex: 1; /* Take available space */
  min-height: 200px; /* Minimum height for chart */
}

.portfolio-chart-svg {
  width: 100%;
  height: 100%;
  border-radius: 6px;
}

.chart-point {
  cursor: pointer;
  transition: all 0.2s ease;
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.3));
}

.chart-point:hover {
  r: 0.8;
  filter: drop-shadow(0 0 6px rgba(255, 255, 255, 0.8));
  transform: scale(1.2);
}

.chart-metrics {
  margin-top: 16px; /* Reduced from 20px */
}

.metric-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr)); /* Slightly smaller minimum */
  gap: 12px; /* Reduced from 15px */
}

.metric-item {
  background: rgba(255, 255, 255, 0.1);
  padding: 12px 16px; /* Reduced padding */
  border-radius: 10px;
  text-align: center;
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.15);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
}

.metric-item:hover {
  background: rgba(255, 255, 255, 0.15);
  transform: translateY(-4px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.25);
  border-color: rgba(255, 255, 255, 0.25);
}

.metric-label {
  display: block;
  font-size: 0.75rem;
  color: rgba(255, 255, 255, 0.7);
  margin-bottom: 4px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  font-weight: 500;
}

.metric-value {
  display: block;
  font-size: 1.1rem;
  font-weight: 600;
  color: #fff;
}

.metric-value.positive {
  color: #10b981;
  text-shadow: 0 0 8px rgba(16, 185, 129, 0.3);
}

.metric-value.negative {
  color: #ef4444;
  text-shadow: 0 0 8px rgba(239, 68, 68, 0.3);
}

.portfolio-chart-loading {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 300px;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border-radius: 12px;
  color: white;
}

.chart-spinner {
  width: 40px;
  height: 40px;
  border: 3px solid rgba(255, 255, 255, 0.3);
  border-top: 3px solid #fff;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 15px;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.portfolio-chart-loading p {
  margin: 0;
  font-size: 1rem;
  color: rgba(255, 255, 255, 0.8);
}

.portfolio-chart-error {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 300px;
  background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
  border-radius: 12px;
  color: white;
  text-align: center;
}

.portfolio-chart-error p {
  margin: 0;
  font-size: 1.1rem;
  font-weight: 500;
}

/* Responsive design */
@media (max-width: 768px) {
  .chart-header {
    flex-direction: column;
    align-items: stretch;
    gap: 15px;
  }

  .chart-controls {
    justify-content: center;
    gap: 10px;
  }

  .metric-grid {
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 10px;
  }

  .metric-btn,
  .timeframe-btn {
    padding: 6px 10px;
    font-size: 0.8rem;
  }

  .chart-value {
    font-size: 1.8rem;
  }

  .portfolio-chart-container {
    padding: 15px;
  }
}

@media (max-width: 480px) {
  .metric-grid {
    grid-template-columns: repeat(2, 1fr);
  }

  .chart-title h3 {
    font-size: 1.2rem;
  }

  .chart-value {
    font-size: 1.6rem;
  }
}

/* Animation for chart appearance */
.portfolio-chart-svg {
  animation: fadeIn 0.6s ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Enhance chart interactivity */
.portfolio-chart-svg polyline {
  stroke-dasharray: 1000;
  stroke-dashoffset: 1000;
  animation: drawLine 1.5s ease-out forwards;
}

@keyframes drawLine {
  to {
    stroke-dashoffset: 0;
  }
}
